#ifndef MENU_CONFIG_H
#define MENU_CONFIG_H

#include <stdint.h>
#include <stdbool.h>

#include "menu_struct.h"
#include "menu_edit.h"

typedef struct stub_config {} stub_config_t;

{% for category_name, category in categories.items() if category.type != "callback" %}
// {{config_name}}
typedef struct {
{% if category.role == "simple" %}
    {{category.c_type}} default_value;
    {{category.c_type}} step;
    {{category.c_type}} min;
    {{category.c_type}} max;
{% elif category.role == "factor" %}
    {{category.c_type}} max;
    {{category.c_type}} min;
    {{category.c_type}} step;
    {{category.c_type}} default_value;
    uint8_t count;
    uint8_t default_idx;
    const {{category.c_type}} *factors;
{% elif category.role == "fixed" %}
    uint8_t count;
    uint8_t default_idx;
    const {{category.c_type}} *values;
{% endif %}{# role #}
} {{category_name}}_config_t;
{% endfor %}{# types #}

typedef struct menu_config {
    menu_id_t id;
    void (*click_cb)(menu_id_t id);
    void (*position_cb)(menu_id_t id, int8_t delta);
    union {        
        stub_config_t stub_config;
{% for category_name, category in categories.items() if category.type != "callback" %}
        {{category_name}}_config_t {{category_name}};
{% endfor %}
    } data;
} menu_item_config_t;

const menu_id_t get_first_id(void);
const menu_item_config_t *menu_get_config(menu_id_t id);


#endif /* MENU_CONFIG_H */