#include "menu_edit.h"
#include "menu_struct.h"
#include "menu_config.h"
#include "menu_values.h"

{% for function_name, function_info in functions.items() %}{# functions #}
// Type: {{function_info.type}}, Role: {{function_info.role}}, Control: {{function_info.control}}, Navigate: {{function_info.navigate}}

{% if function_info.role == "simple" %}
{% include "edit_simple.c.jinja" %}
{% endif %}

void {{function_name}}_cb(menu_id_t id{% if function_info.control == "position" %}, int8_t delta{% endif %}) {
    menu_item_config_t *config = menu_get_config(id);
    menu_item_value_t  *value  = menu_get_value(id);
{% if function_info.role == "simple" %}{# role == simple #}
    {{function_info.category.c_type}} *val  = &(value->data.{{function_info.category.name}}.value);
    {{function_info.category.c_type}}  step = config->data.{{function_info.category.name}}.step;
    {{function_info.category.c_type}}   min = config->data.{{function_info.category.name}}.min;
    {{function_info.category.c_type}}   max = config->data.{{function_info.category.name}}.max;
{% if function_info.control == "click" %}{# control==click для factor click обрабатывается кольцевым изменением значения индекса #}
    *val = (*val + step) < max ? (*val + step) : min; ///< Шагаем только вперёд. Зациклено
{% elif function_info.control == "position" %}{# #}
{% if function_info.navigate == "limit" %}{# navigate limit #}
    if (delta < 0)
        *val = (*val + delta * step) > min ? (*val + delta * step) : min;
    else if (delta > 0)
        *val = (*val + delta * step) < max ? (*val + delta * step) : max;
{% elif function_info.navigate == "cyclic" %}{# navigate cyclic #}
    if (delta < 0)
        *val = (*val + delta * step) > min ? (*val + delta * step) : max;
    else if (delta > 0)
        *val = (*val + delta * step) < max ? (*val + delta * step) : min;
{% endif %}{# navigate #}        
{% endif %}{# control #}
{% elif function_info.role == "factor" %}{# role == factor #}
    uint8_t *idx = &(value->data.{{function_info.category.name}}.idx);
{% if function_info.control == "click" %}{# control==click для factor click обрабатывается кольцевым изменением значения индекса #}
    {{function_info.category.c_type}}  count = config->data.{{function_info.category.name}}.count;
    *idx = (*idx + 1) % count; // Кольцевое изменение индекса фактора по клику
{% elif function_info.control == "position" %}{# control==position для factor позиция обрабатывает ТОЛЬКО значение поля #}
    {{function_info.category.c_type}} factor = config->data.{{function_info.category.name}}.factors[*idx];
    {{function_info.category.c_type}} *val  = &(value->data.{{function_info.category.name}}.value);
    {{function_info.category.c_type}}  step = config->data.{{function_info.category.name}}.step;
    {{function_info.category.c_type}}   min = config->data.{{function_info.category.name}}.min;
    {{function_info.category.c_type}}   max = config->data.{{function_info.category.name}}.max;
{% if function_info.navigate == "limit" %}{# navigate limit #}
    if (delta < 0)
        *val = (*val + delta * factor) > min ? (*val + delta * factor) : min;
    else if (delta > 0)
        *val = (*val + delta * factor) < max ? (*val + delta * factor) : max;
{% elif function_info.navigate == "cyclic" %}{# navigate cyclic #}
    if (delta < 0)
        *val = (*val + delta * factor) > min ? (*val + delta * factor) : max;
    else if (delta > 0)
        *val = (*val + delta * factor) < max ? (*val + delta * factor) : min;
{% endif %}
{% endif %}{# control #}
{% elif function_info.role == "fixed" %}{# role == fixed #}
    uint8_t *idx = &(value->data.{{function_info.category.name}}.idx);
    uint8_t count = config->data.{{function_info.category.name}}.count;
{% if function_info.control == "click" %}{# Если click, то только кольцевой режим ВЕЗДЕ. Занеси это во FlatNode! #}
    *idx = (*idx + 1) % count;
{% elif function_info.control == "position" %}
{% if function_info.navigate == "limit" %}
    if (delta > 0)
        *idx = (*idx + delta) >= count ? count - 1 : (*idx + 1);
    else if (delta < 0)
        *idx = (*idx + delta) < 0 ? 0 : (*idx + delta);
{% elif function_info.navigate == "cyclic" %}
    if (delta > 0)
        *idx = (*idx + delta) >= count ? 0 : (*idx + 1);
    else if (delta < 0)
        *idx = (*idx + delta) < 0 ? count - 1 : (*idx + delta);
{% endif %}{# navigate #}
{% endif %}{# control #}

{% if function_info.navigate == "limit" %}{# navigate limit #}
{% elif function_info.navigate == "cyclic" %}{# navigate cyclic #}
{% endif %}{# navigate #}
{% endif %}{# roles #}
}
{% endfor %}{# functions #}

