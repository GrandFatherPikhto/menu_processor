#include "menu_data_tree.h"
#include "menu_tree.h"

static const menu_node_t s_menu_tree[] = {
    [MENU_ID_ROOT] = {
        .id = MENU_ID_ROOT,
        .title = "root",
        .parent = MENU_ID_COUNT,
        .child = MENU_ID_{{ first.id.upper() }},
        .prev = MENU_ID_COUNT,
        .next = MENU_ID_COUNT,
        .type = MENU_TREE_TYPE_BRANCH
    },
{% for item_id, item in menu.items() %}
    [MENU_ID_{{ item_id.upper()}}] = {
        .id = MENU_ID_{{ item_id.upper()}},
        .title = "{{ item.name }}",
        .parent = {% if item.parent %}MENU_ID_{{ item.parent.id.upper() }}{% else %}MENU_ID_COUNT{% endif %},
        .child = {% if item.first_child %}MENU_ID_{{ item.first_child.id.upper() }}{% else %}MENU_ID_COUNT{% endif %},
        .prev = {% if item.prev_sibling %}MENU_ID_{{ item.prev_sibling.id.upper() }}{% else %}MENU_ID_COUNT{% endif %},
        .next = {% if item.next_sibling %}MENU_ID_{{ item.next_sibling.id.upper() }}{% else %}MENU_ID_COUNT{% endif %},
        .type = MENU_TREE_TYPE_{% if item.is_leaf %}LEAF{% else %}BRANCH{% endif %}

    },
{% endfor %}    
};

const menu_node_t *menu_data_get_tree(void) {
    return s_menu_tree;
}

menu_id_t menu_data_get_first_id(void) {
    return MENU_ID_{{ first.id.upper() }};
}

