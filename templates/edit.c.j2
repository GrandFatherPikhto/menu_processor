#include "menu_edit.h"
#include "menu_struct.h"
#include "menu_config.h"
#include "menu_values.h"

{% for function_name, function_info in unique_functions.items() %}
{% if function_info.control == 'click' %}
void {{function_name}}_func(menu_id_t id) {
    menu_item_config_t *config = menu_get_config(id);
    menu_item_value_t  *value  = menu_get_value(id);
{% if function_info.type.media_type == 'boolean' %}
    value->data.{{function_info.type.type}}_value.value != 
        value->data.{{function_info.type.type}}_value.value;
{% elif function_info.type.media_type == 'number' %}
    value->data.{{function_info.type.type}}_value.value != 
        (value->data.boolean_value.value + config->data.{{function_info.type.type}}.step) %
            (config->data.{{function_info.type.type}}.max);
{% endif %}
}
{% elif function_info.control == 'position' %}
void {{function_name}}_func(menu_id_t id, int8_t delta) {
    menu_item_config_t *config = menu_get_config(id);
    menu_item_value_t  *value  = menu_get_value(id);
{% if function_info.type.media_type == 'boolean' %}
    value->data.{{function_info.type.type}}_value.value != 
        ((value->data.{{function_info.type.type}}_value.value ? 0 : 1  + (delta > 0) ? delta : - delta) % 2) ? true : false;
{% elif function_info.type.media_type == 'number' %}
{% if function_info.type.category == 'simple' %}
    if (delta > 0) {
        value->data.{{function_info.type.type}}_value.value = 
            (value->data.{{function_info.type.type}}_value.value + 
                config->data.{{function_info.type.type}}_config.step * delta) >
                    config->data.{{function_info.type.type}}_config.max ? 
                    config->data.{{function_info.type.type}}_config.max :
                        value->data.{{function_info.type.type}}_value.value + 
                config->data.{{function_info.type.type}}_config.step * delta;

    } else if (delta < 0) {
        value->data.{{function_info.type.type}}_value.value = 
            (value->data.{{function_info.type.type}}_value.value + 
                config->data.{{function_info.type.type}}_config.step * delta)  
                    <  config->data.{{function_info.type.type}}_config.min ? 
                        config->data.{{function_info.type.type}}_config.min :
                        value->data.{{function_info.type.type}}_value.value + 
                            config->data.{{function_info.type.type}}_config.step * delta;
    }
{% elif function_info.type.category == 'factor' %}
    if (delta > 0) {
        value->data.{{function_info.type.type}}_value.factor_idx = 
            (value->data.{{function_info.type.type}}_value.factor_idx + delta) >=
                    config->data.{{function_info.type.type}}_config.factor.count ? 
                        config->data.{{function_info.type.type}}_config.factor.count - 1 :
                            value->data.{{function_info.type.type}}_value.factor_idx + delta;
    } else if (delta < 0) {
        value->data.{{function_info.type.type}}_value.factor_idx = 
            ((value->data.{{function_info.type.type}}_value.factor.factor_idx + delta) < 0) ? 0 :
                value->data.{{function_info.type.type}}_value.factor.factor_idx + delta;
    }
{% elif function_info.type.category == 'fixed' %}
    if (delta > 0) {
        value->data.{{function_info.type.type}}_value.value_idx = 
            (value->data.{{function_info.type.type}}_value_idx + delta) >=
                    config->data.{{function_info.type.type}}_config.count ? 
                        config->data.{{function_info.type.type}}_config.count - 1 :
                            value->data.{{function_info.type.type}}_value_idx + delta;
    } else if (delta < 0) {
        value->data.{{function_info.type.type}}_value.value_idx = 
            ((value->data.{{function_info.type.type}}_valueidx + delta) < 0) ? 0 :
                value->data.{{function_info.type.type}}_value_idx + delta;
    }
{% endif %} {# category #}
{% endif %} {# media_type #}
}
{% endif %} {# control #}
{% endfor %} {# unique_functions #}

