/**
 * @file {{ config.menu_name }}.h
 * @brief Auto-generated menu system for Rotary Encoder
 * @author {{ config.author }}
 * @version {{ config.version }}
 * 
 * ⚠️ This file is auto-generated. Do not edit manually!
 */

#ifndef {{ config.menu_name|upper }}_H
#define {{ config.menu_name|upper }}_H

#include <stdint.h>
#include <stdbool.h>

// Menu types
typedef enum {
    MENU_TYPE_ROOT,
    MENU_TYPE_SUBMENU,
    MENU_TYPE_ACTION_BOOL,
    MENU_TYPE_ACTION_INT,
    MENU_TYPE_ACTION_INT_FACTOR,
    MENU_TYPE_ACTION_FLOAT,
    MENU_TYPE_ACTION_INT_STEP, 
    MENU_TYPE_ACTION_FLOAT_STEP,
    MENU_TYPE_ACTION_CALLBACK
} menu_type_t;

// Menu states
typedef enum {
    MENU_STATE_NAVIGATION,
    MENU_STATE_EDIT
} menu_state_t;

// Menu IDs
typedef enum {
    {% for item in config.menu_structure %}
    MENU_ID_{{ item.id|upper }},
    {% endfor %}
    MENU_ID_COUNT
} menu_id_t;

// Menu data structure
typedef struct {
    union {
        bool bool_value;
        int int_value;
        float float_value;
    } data;
    uint8_t factor_idx;
    uint8_t step_idx;
} menu_item_data_t;

// Navigation item structure
typedef struct {
    void (*enter_handler)();
    void (*parent_handler)();
    void (*first_child_handler)();
    void (*next_sibling_handler)();
    void (*prev_sibling_handler)();
    const char* title;
    menu_type_t type;
    menu_id_t id;
    void* data_ptr;
    float min_value;
    float max_value;
    float step;
    const float* factors;
    uint8_t factors_count;
    const float* steps;
    uint8_t steps_count;
    void (*action_callback)(int8_t change);
} menu_nav_item_t;

// API Functions
menu_state_t menu_get_state(void);
menu_item_data_t* menu_get_data(void);
void* menu_get_data_ptr(menu_id_t id);

void handle_push_button(void);
void handle_long_push_button(void);
void handle_double_click_button(void);
void handle_change_position(int8_t delta);

void menu_draw(void);
void menu_init(void);

// External callbacks
{% for item in config.menu_structure if item.type == 'action_callback' and item.callback %}
extern void {{ item.callback }}(int8_t change);
{% endfor %}

#endif // {{ config.menu_name|upper }}_H