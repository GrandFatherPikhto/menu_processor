#ifndef MENU_VALUE_H
#define MENU_VALUE_H

#include <stdint.h>
#include <stdbool.h>

#include "menu_type.h"

typedef struct stub_value_t {} stub_value_t;
{%  for category_name, category in categories.items() %}{# categories #}
{% if category.role == "simple" %}{# roles #}
typedef struct {
    {{category.c_type}} value;
} {{category_name}}_value_t;
{% elif category.role == "factor" %}
typedef struct {
    uint8_t idx;
    {{category.c_type}} value;
} {{category_name}}_value_t;
{% elif category.role == "fixed" %}
typedef struct {
    uint8_t idx;
} {{category_name}}_value_t;
{% elif category.role == "callback" %}
typedef struct {
    void *value_ptr;
} {{category_name}}_value_t;
{% endif %}{# roles #}
{% endfor %}{# categories #}

typedef struct menu_node_value {
    menu_id_t id;
    union {
        stub_value_t stub_value;
{% for category_name, category in categories.items() %}{# categories #}
        {{category_name}}_value_t {{category_name}};
{% endfor %}
    } data;
} menu_node_value_t;

menu_node_value_t *menu_value_get_by_id(menu_context_t *ctx, menu_id_t id);

{%  for category_name, category in categories.items() %}{# categories #}
{% if category.role == "simple" %}
{{category.c_type}} *menu_value_get_{{category_name}}_value(menu_context_t *ctx, menu_id_t id);
{% elif category.role == "factor" %}
{{category.c_type}} *menu_value_get_{{category_name}}_value(menu_context_t *ctx, menu_id_t id);
uint8_t *menu_value_get_{{category_name}}_idx(menu_context_t *ctx, menu_id_t id);
{% elif category.role == "fixed" %}
uint8_t *menu_value_get_{{category_name}}_idx(menu_context_t *ctx, menu_id_t id);
{% endif %}
{% endfor %}{# categories #}

#endif // MENU_VALUE_H